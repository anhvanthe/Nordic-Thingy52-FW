


ARM Macro Assembler    Page 1 


    1 00000000         #line   1                "..\\..\\..\\..\\..\\..\\compon
ents\\libraries\\experimental_task_manager\\task_manager_core_keil.s"
    1 00000000         ; Copyright (c) 2017 - 2017, Nordic Semiconductor ASA
    2 00000000         ; 
    3 00000000         ; All rights reserved.
    4 00000000         ; 
    5 00000000         ; Redistribution and use in source and binary forms, wit
                       h or without modification,
    6 00000000         ; are permitted provided that the following conditions a
                       re met:
    7 00000000         ; 
    8 00000000         ; 1. Redistributions of source code must retain the abov
                       e copyright notice, this
    9 00000000         ;    list of conditions and the following disclaimer.
   10 00000000         ; 
   11 00000000         ; 2. Redistributions in binary form, except as embedded 
                       into a Nordic
   12 00000000         ;    Semiconductor ASA integrated circuit in a product o
                       r a software update for
   13 00000000         ;    such product, must reproduce the above copyright no
                       tice, this list of
   14 00000000         ;    conditions and the following disclaimer in the docu
                       mentation and/or other
   15 00000000         ;    materials provided with the distribution.
   16 00000000         ; 
   17 00000000         ; 3. Neither the name of Nordic Semiconductor ASA nor th
                       e names of its
   18 00000000         ;    contributors may be used to endorse or promote prod
                       ucts derived from this
   19 00000000         ;    software without specific prior written permission.
                       
   20 00000000         ; 
   21 00000000         ; 4. This software, with or without modification, must o
                       nly be used with a
   22 00000000         ;    Nordic Semiconductor ASA integrated circuit.
   23 00000000         ; 
   24 00000000         ; 5. Any software provided in binary form under this lic
                       ense must not be reverse
   25 00000000         ;    engineered, decompiled, modified and/or disassemble
                       d.
   26 00000000         ; 
   27 00000000         ; THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA 
                       "AS IS" AND ANY EXPRESS
   28 00000000         ; OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, 
                       THE IMPLIED WARRANTIES
   29 00000000         ; OF MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A
                        PARTICULAR PURPOSE ARE
   30 00000000         ; DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA
                        OR CONTRIBUTORS BE
   31 00000000         ; LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, 
                       EXEMPLARY, OR
   32 00000000         ; CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, 
                       PROCUREMENT OF SUBSTITUTE
   33 00000000         ; GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR B
                       USINESS INTERRUPTION)
   34 00000000         ; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER
                        IN CONTRACT, STRICT
   35 00000000         ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
                        ARISING IN ANY WAY OUT



ARM Macro Assembler    Page 2 


   36 00000000         ; OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE PO
                       SSIBILITY OF SUCH DAMAGE.
   37 00000000         ;
   38 00000000         
   39 00000000                 PRESERVE8
   40 00000000                 THUMB
   41 00000000                 AREA             |.text|, CODE, READONLY
   42 00000000         
   43 00000000         task_switch
                               PROC
   44 00000000                 EXPORT           task_switch
   45 00000000                 IMPORT           task_schedule
   46 00000000         
   47 00000000 F3EF 8014       MRS              R0, CONTROL ; Fetch CONTROL reg
                                                            ister to R0
   48 00000004         
   49 00000004                 IF               :DEF: FLOAT_ABI_HARD
   50 00000004 F010 0F04       TST              R0, #(1 << 2) 
                                                            ; Check FPCA flag.
   51 00000008 BF1E            ITTT             NE
   52 0000000A EEF1 1A10       VMRSNE           R1, FPSCR   ; If FPCA set, fetc
                                                            h FPSCR.
   53 0000000E B403            STMDBNE          SP!, {R0, R1} ; If FPCA set, sa
                                                            ve FPSCR (also pad 
                                                            stack to 8-byte ali
                                                            gnment)
   54 00000010 ED2D 0A20       VSTMDBNE         SP!, {S0-S31} ; If FPCA set, sa
                                                            ve FPU registers.
   55 00000014                 ENDIF
   56 00000014         
   57 00000014 B401            STMDB            SP!, {R0}   ; Save CONTROL regi
                                                            ster.
   58 00000016 F020 0004       AND              R0, R0, #~(1 << 2) 
                                                            ; Clear FPCA bit.
   59 0000001A F380 8814       MSR              CONTROL, R0 ; Update CONTROL re
                                                            gister.
   60 0000001E         
   61 0000001E E92D 5FF1       STMDB            SP!, {R0, R4-R12, LR} ; Save CP
                                                            U registers. Reserv
                                                            e space for R0, nee
                                                            ded to pass argumen
                                                            t to new task.
   62 00000022         
   63 00000022 4668            MOV              R0, SP      ; Call task schedul
                                                            er with current sta
                                                            ck pointer as argum
                                                            ent.
   64 00000024 4908            LDR              R1, =task_schedule ;
   65 00000026 4788            BLX              R1          ;
   66 00000028         
   67 00000028 4685            MOV              SP, R0      ; Switch to new sta
                                                            ck, returned by tas
                                                            k scheduler.
   68 0000002A         
   69 0000002A E8BD 5FF8       LDMIA            SP!, {R3, R4-R12, LR} ; Restore
                                                             CPU registers. Arg
                                                            ument to new task i
                                                            s in R3.
   70 0000002E BC01            LDMIA            SP!, {R0}   ; Restore CONTROL r



ARM Macro Assembler    Page 3 


                                                            egister.
   71 00000030 F380 8814       MSR              CONTROL, R0 ; Update CONTROL re
                                                            gister.
   72 00000034         
   73 00000034                 IF               :DEF: FLOAT_ABI_HARD
   74 00000034 F010 0F04       TST              R0, #(1 << 2) 
                                                            ; Check FPCA flag.
   75 00000038 BF1E            ITTT             NE
   76 0000003A ECBD 0A20       VLDMIANE         SP!, {S0-S31} ; If FPCA set, re
                                                            store FPU registers
                                                            .
   77 0000003E BC03            LDMIANE          SP!, {R0, R1} ; If FPCA set, re
                                                            store FPSCR (also r
                                                            emove padding).
   78 00000040 EEE1 1A10       VMSRNE           FPSCR, R1   ; If FPCA set, upda
                                                            te FPSCR
   79 00000044                 ENDIF
   80 00000044         
   81 00000044 4618            MOV              R0, R3      ; Place optional ta
                                                            sk argument in R0.
   82 00000046 4770            BX               LR          ; Return to new tas
                                                            k.
   83 00000048         
   84 00000048                 ENDP
   85 00000048                 END
              00000000 
Command Line: --debug --xref --cpreproc --diag_suppress=9931 --cpu=Cortex-M4.fp
 --apcs=interwork --depend=.\_build\task_manager_core_keil.d -o.\_build\task_ma
nager_core_keil.o -I..\..\..\Source\Bootloader -I..\..\..\Source\Common -I..\..
\..\Source\Configuration -I..\..\..\Source\Debug -I..\..\..\Source\Drivers -I..
\..\..\Source\Libraries -I..\..\..\Source\Libraries\bv32fp-1.2 -I..\..\..\Sourc
e\Libraries\opus-1.2.1 -I..\..\..\Source\Libraries\sbc-0025\include -I..\..\..\
Source\Modules -I..\..\..\..\..\..\components\ble\ble_services\ble_bas -I..\..\
..\..\..\..\components\ble\ble_services\ble_dis -I..\..\..\..\..\..\components\
ble\ble_services\ble_hids -I..\..\..\..\..\..\components\ble\ble_services\ble_i
as -I..\..\..\..\..\..\components\ble\ble_services\ble_nus -I..\..\..\..\..\..\
components\ble\common -I..\..\..\..\..\..\components\ble\nrf_ble_gatt -I..\..\.
.\..\..\..\components\ble\peer_manager -I..\..\..\..\..\..\components\drivers_n
rf\ble_flash -I..\..\..\..\..\..\components\drivers_nrf\clock -I..\..\..\..\..\
..\components\drivers_nrf\common -I..\..\..\..\..\..\components\drivers_nrf\del
ay -I..\..\..\..\..\..\components\drivers_nrf\gpiote -I..\..\..\..\..\..\compon
ents\drivers_nrf\hal -I..\..\..\..\..\..\components\drivers_nrf\pdm -I..\..\..\
..\..\..\components\drivers_nrf\ppi -I..\..\..\..\..\..\components\drivers_nrf\
pwm -I..\..\..\..\..\..\components\drivers_nrf\rng -I..\..\..\..\..\..\componen
ts\drivers_nrf\saadc -I..\..\..\..\..\..\components\drivers_nrf\twi_master -I..
\..\..\..\..\..\components\drivers_nrf\uart -I..\..\..\..\..\..\components\driv
ers_nrf\wdt -I..\..\..\..\..\..\components\libraries\atomic -I..\..\..\..\..\..
\components\libraries\atomic_fifo -I..\..\..\..\..\..\components\libraries\ball
oc -I..\..\..\..\..\..\components\libraries\cli -I..\..\..\..\..\..\components\
libraries\cli\ble_uart -I..\..\..\..\..\..\components\libraries\cli\rtt -I..\..
\..\..\..\..\components\libraries\cli\uart -I..\..\..\..\..\..\components\libra
ries\crc16 -I..\..\..\..\..\..\components\libraries\crc32 -I..\..\..\..\..\..\c
omponents\libraries\crypto -I..\..\..\..\..\..\components\libraries\crypto\back
end\cc310_lib -I..\..\..\..\..\..\components\libraries\crypto\backend\micro_ecc
 -I..\..\..\..\..\..\components\libraries\crypto\backend\nrf_crypto_sw -I..\..\
..\..\..\..\components\libraries\ecc -I..\..\..\..\..\..\components\libraries\e
xperimental_log -I..\..\..\..\..\..\components\libraries\experimental_log\src -
I..\..\..\..\..\..\components\libraries\experimental_memobj -I..\..\..\..\..\..
\components\libraries\experimental_mpu -I..\..\..\..\..\..\components\libraries



ARM Macro Assembler    Page 4 


\experimental_ringbuf -I..\..\..\..\..\..\components\libraries\experimental_sec
tion_vars -I..\..\..\..\..\..\components\libraries\experimental_stack_guard -I.
.\..\..\..\..\..\components\libraries\experimental_task_manager -I..\..\..\..\.
.\..\components\libraries\fds -I..\..\..\..\..\..\components\libraries\fstorage
 -I..\..\..\..\..\..\components\libraries\gpiote -I..\..\..\..\..\..\components
\libraries\hardfault -I..\..\..\..\..\..\components\libraries\hardfault\nrf52 -
I..\..\..\..\..\..\components\libraries\mem_manager -I..\..\..\..\..\..\compone
nts\libraries\mutex -I..\..\..\..\..\..\components\libraries\pwr_mgmt -I..\..\.
.\..\..\..\components\libraries\queue -I..\..\..\..\..\..\components\libraries\
sha256 -I..\..\..\..\..\..\components\libraries\strerror -I..\..\..\..\..\..\co
mponents\libraries\svc -I..\..\..\..\..\..\components\libraries\timer -I..\..\.
.\..\..\..\components\libraries\twi_mngr -I..\..\..\..\..\..\components\librari
es\util -I..\..\..\..\..\..\components\nfc\ndef\connection_handover\ac_rec -I..
\..\..\..\..\..\components\nfc\ndef\connection_handover\ble_oob_advdata -I..\..
\..\..\..\..\components\nfc\ndef\connection_handover\ble_pair_msg -I..\..\..\..
\..\..\components\nfc\ndef\connection_handover\common -I..\..\..\..\..\..\compo
nents\nfc\ndef\connection_handover\ep_oob_rec -I..\..\..\..\..\..\components\nf
c\ndef\connection_handover\hs_rec -I..\..\..\..\..\..\components\nfc\ndef\conne
ction_handover\le_oob_rec -I..\..\..\..\..\..\components\nfc\ndef\generic\messa
ge -I..\..\..\..\..\..\components\nfc\ndef\generic\record -I..\..\..\..\..\..\c
omponents\nfc\ndef\text -I..\..\..\..\..\..\components\nfc\t2t_lib -I..\..\..\.
.\..\..\components\nfc\t2t_lib\hal_t2t -I..\..\..\..\..\..\components\softdevic
e\common -I..\..\..\..\..\..\components\softdevice\s132\headers -I..\..\..\..\.
.\..\components\softdevice\s132\headers\nrf52 -I..\..\..\..\..\..\components\to
olchain -I..\..\..\..\..\..\external\fprintf -I..\..\..\..\..\..\external\micro
-ecc\micro-ecc -I..\..\..\..\..\..\external\nrf_cc310\include -I..\..\..\..\..\
..\external\segger_rtt -I..\config -I.\RTE\_CUSTOM-SR3_nRF52832_Custom_Board -I
C:\Keil_v5\ARM\PACK\ARM\CMSIS\4.5.0\CMSIS\Include -IC:\Keil_v5\ARM\PACK\NordicS
emiconductor\nRF_DeviceFamilyPack\8.15.0\Device\Include --predefine="__MICROLIB
 SETA 1" --predefine="__UVISION_VERSION SETA 525" --predefine="_RTE_ SETA 1" --
predefine="NRF52 SETA 1" --predefine="APP_SCHEDULER_ENABLED SETA 1" --predefine
="ARM_MATH_CM4 SETA 1" --predefine="BLE_STACK_SUPPORT_REQD SETA 1" --predefine=
"CONFIG_BOARD_NRF52832_CUSTOM SETA 1" --predefine="DISABLE_FLOAT_API SETA 1" --
predefine="ENABLE_ASSERTIONS SETA 1" --predefine="FIXED_POINT SETA 1" --predefi
ne="FLOAT_ABI_HARD SETA 1" --predefine="HAL_NFC_ENGINEERING_BC_FTPAN_WORKAROUND
 SETA 1" --predefine="HAVE_ALLOCA_H SETA 1" --predefine="HAVE_LRINT SETA 1" --p
redefine="HAVE_LRINTF SETA 1" --predefine="NRF52 SETA 1" --predefine="NRF52832_
XXAA SETA 1" --predefine="NRF_SD_BLE_API_VERSION SETA 5" --predefine="OPUS_ARM_
ASM SETA 1" --predefine="OPUS_ARM_INLINE_ASM SETA 1" --predefine="OPUS_ARM_INLI
NE_EDSP SETA 1" --predefine="OPUS_ARM_INLINE_MEDIA SETA 1" --predefine="OPUS_AR
M_MAY_HAVE_EDSP SETA 1" --predefine="OPUS_ARM_PRESUME_EDSP SETA 1" --predefine=
"OPUS_BUILD SETA 1" --predefine="S132 SETA 1" --predefine="SOFTDEVICE_PRESENT S
ETA 1" --predefine="SWI_DISABLE0 SETA 1" --predefine="USE_ALLOCA SETA 1" --pred
efine="USE_APP_CONFIG SETA 1" --predefine="__STARTUP_CONFIG SETA 1" --cpreproc_
opts=-D__ASSEMBLER__,-DCONFIG_BOARD_NRF52832_CUSTOM --list=.\_build\task_manage
r_core_keil.lst ..\..\..\..\..\..\components\libraries\experimental_task_manage
r\task_manager_core_keil.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 41 in file ..\\..\\..\\..\\..\\..\\components\\libraries\\experim
ental_task_manager\\task_manager_core_keil.s
   Uses
      None
Comment: .text unused
task_switch 00000000

Symbol: task_switch
   Definitions
      At line 43 in file ..\\..\\..\\..\\..\\..\\components\\libraries\\experim
ental_task_manager\\task_manager_core_keil.s
   Uses
      At line 44 in file ..\\..\\..\\..\\..\\..\\components\\libraries\\experim
ental_task_manager\\task_manager_core_keil.s
Comment: task_switch used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

task_schedule 00000000

Symbol: task_schedule
   Definitions
      At line 45 in file ..\\..\\..\\..\\..\\..\\components\\libraries\\experim
ental_task_manager\\task_manager_core_keil.s
   Uses
      At line 64 in file ..\\..\\..\\..\\..\\..\\components\\libraries\\experim
ental_task_manager\\task_manager_core_keil.s
Comment: task_schedule used once
1 symbol
367 symbols in table
